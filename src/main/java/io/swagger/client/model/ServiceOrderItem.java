/*
 * API ServiceOrder
 * Request the instantiation of a service  A Service Order is a type of order which can be used to describe a group of operations on service – one service order item per service. An action at the level of the service order item describe the operation to be done on a service (add, terminate for example). The service order is triggered from the BSS system in charge of the product order management to ONAP that will manage the service fulfillment.  List of available subscription for serviceOrdering notifications, see /hub resources for more information:  - ServiceOrderCreationNotification - ServiceOrderStateChangeNotification - ServiceOrderItemStateChangeNotification  
 *
 * OpenAPI spec version: 4.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ActionType;
import io.swagger.client.model.OrderItemRelationship;
import io.swagger.client.model.OrderMessage;
import io.swagger.client.model.Service;
import io.swagger.client.model.StateType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
/**
 * An identified part of the order. A service order is decomposed into one or more order items.
 */
@Schema(description = "An identified part of the order. A service order is decomposed into one or more order items.")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-22T18:40:19.698152-04:00[America/Toronto]")
public class ServiceOrderItem {
  @SerializedName("id")
  private String id = null;

  @SerializedName("action")
  private ActionType action = null;

  @SerializedName("state")
  private StateType state = null;

  @SerializedName("percentProgress")
  private String percentProgress = null;

  @SerializedName("@type")
  private String _atType = null;

  @SerializedName("@schemaLocation")
  private String _atSchemaLocation = null;

  @SerializedName("@baseType")
  private String _atBaseType = null;

  @SerializedName("orderItemRelationship")
  private List<OrderItemRelationship> orderItemRelationship = null;

  @SerializedName("service")
  private Service service = null;

  @SerializedName("orderItemMessage")
  private List<OrderMessage> orderItemMessage = null;

  public ServiceOrderItem id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the line item (generally it is a sequence number 01, 02, 03, …)
   * @return id
  **/
  @Schema(required = true, description = "Identifier of the line item (generally it is a sequence number 01, 02, 03, …)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServiceOrderItem action(ActionType action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ActionType getAction() {
    return action;
  }

  public void setAction(ActionType action) {
    this.action = action;
  }

  public ServiceOrderItem state(StateType state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public StateType getState() {
    return state;
  }

  public void setState(StateType state) {
    this.state = state;
  }

  public ServiceOrderItem percentProgress(String percentProgress) {
    this.percentProgress = percentProgress;
    return this;
  }

   /**
   * Progress of the delivery in percentage.
   * @return percentProgress
  **/
  @Schema(description = "Progress of the delivery in percentage.")
  public String getPercentProgress() {
    return percentProgress;
  }

  public void setPercentProgress(String percentProgress) {
    this.percentProgress = percentProgress;
  }

  public ServiceOrderItem _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

   /**
   * Used to extend the order item. not used in Beijing relase
   * @return _atType
  **/
  @Schema(description = "Used to extend the order item. not used in Beijing relase")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }

  public ServiceOrderItem _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

   /**
   * not used in Beijing relase
   * @return _atSchemaLocation
  **/
  @Schema(description = "not used in Beijing relase")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public ServiceOrderItem _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

   /**
   * not used in Beijing relase
   * @return _atBaseType
  **/
  @Schema(description = "not used in Beijing relase")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }

  public ServiceOrderItem orderItemRelationship(List<OrderItemRelationship> orderItemRelationship) {
    this.orderItemRelationship = orderItemRelationship;
    return this;
  }

  public ServiceOrderItem addOrderItemRelationshipItem(OrderItemRelationship orderItemRelationshipItem) {
    if (this.orderItemRelationship == null) {
      this.orderItemRelationship = new ArrayList<OrderItemRelationship>();
    }
    this.orderItemRelationship.add(orderItemRelationshipItem);
    return this;
  }

   /**
   * Get orderItemRelationship
   * @return orderItemRelationship
  **/
  @Schema(description = "")
  public List<OrderItemRelationship> getOrderItemRelationship() {
    return orderItemRelationship;
  }

  public void setOrderItemRelationship(List<OrderItemRelationship> orderItemRelationship) {
    this.orderItemRelationship = orderItemRelationship;
  }

  public ServiceOrderItem service(Service service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @Schema(required = true, description = "")
  public Service getService() {
    return service;
  }

  public void setService(Service service) {
    this.service = service;
  }

  public ServiceOrderItem orderItemMessage(List<OrderMessage> orderItemMessage) {
    this.orderItemMessage = orderItemMessage;
    return this;
  }

  public ServiceOrderItem addOrderItemMessageItem(OrderMessage orderItemMessageItem) {
    if (this.orderItemMessage == null) {
      this.orderItemMessage = new ArrayList<OrderMessage>();
    }
    this.orderItemMessage.add(orderItemMessageItem);
    return this;
  }

   /**
   * Get orderItemMessage
   * @return orderItemMessage
  **/
  @Schema(description = "")
  public List<OrderMessage> getOrderItemMessage() {
    return orderItemMessage;
  }

  public void setOrderItemMessage(List<OrderMessage> orderItemMessage) {
    this.orderItemMessage = orderItemMessage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceOrderItem serviceOrderItem = (ServiceOrderItem) o;
    return Objects.equals(this.id, serviceOrderItem.id) &&
        Objects.equals(this.action, serviceOrderItem.action) &&
        Objects.equals(this.state, serviceOrderItem.state) &&
        Objects.equals(this.percentProgress, serviceOrderItem.percentProgress) &&
        Objects.equals(this._atType, serviceOrderItem._atType) &&
        Objects.equals(this._atSchemaLocation, serviceOrderItem._atSchemaLocation) &&
        Objects.equals(this._atBaseType, serviceOrderItem._atBaseType) &&
        Objects.equals(this.orderItemRelationship, serviceOrderItem.orderItemRelationship) &&
        Objects.equals(this.service, serviceOrderItem.service) &&
        Objects.equals(this.orderItemMessage, serviceOrderItem.orderItemMessage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, action, state, percentProgress, _atType, _atSchemaLocation, _atBaseType, orderItemRelationship, service, orderItemMessage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceOrderItem {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    percentProgress: ").append(toIndentedString(percentProgress)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("    orderItemRelationship: ").append(toIndentedString(orderItemRelationship)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("    orderItemMessage: ").append(toIndentedString(orderItemMessage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
