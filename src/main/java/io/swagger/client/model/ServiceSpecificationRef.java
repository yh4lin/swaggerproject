/*
 * API ServiceOrder
 * Request the instantiation of a service  A Service Order is a type of order which can be used to describe a group of operations on service â€“ one service order item per service. An action at the level of the service order item describe the operation to be done on a service (add, terminate for example). The service order is triggered from the BSS system in charge of the product order management to ONAP that will manage the service fulfillment.  List of available subscription for serviceOrdering notifications, see /hub resources for more information:  - ServiceOrderCreationNotification - ServiceOrderStateChangeNotification - ServiceOrderItemStateChangeNotification  
 *
 * OpenAPI spec version: 4.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.TargetServiceSchema;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * The service specification (these attributes are fetched from the catalogue).
 */
@Schema(description = "The service specification (these attributes are fetched from the catalogue).")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-22T18:40:19.698152-04:00[America/Toronto]")
public class ServiceSpecificationRef {
  @SerializedName("id")
  private String id = null;

  @SerializedName("href")
  private String href = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("version")
  private String version = null;

  @SerializedName("targetServiceSchema")
  private TargetServiceSchema targetServiceSchema = null;

  @SerializedName("@type")
  private String _atType = null;

  @SerializedName("@schemaLocation")
  private String _atSchemaLocation = null;

  @SerializedName("@baseType")
  private String _atBaseType = null;

  public ServiceSpecificationRef id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the service specification This information will be used to retrieve SDC information + mapped to SO ModelNameVersionIdin the request.
   * @return id
  **/
  @Schema(required = true, description = "Unique identifier of the service specification This information will be used to retrieve SDC information + mapped to SO ModelNameVersionIdin the request.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServiceSpecificationRef href(String href) {
    this.href = href;
    return this;
  }

   /**
   * Reference of the service specification Not used in Beijing release.
   * @return href
  **/
  @Schema(description = "Reference of the service specification Not used in Beijing release.")
  public String getHref() {
    return href;
  }

  public void setHref(String href) {
    this.href = href;
  }

  public ServiceSpecificationRef name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the service specification Not used in Beijing release
   * @return name
  **/
  @Schema(description = "Name of the service specification Not used in Beijing release")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public ServiceSpecificationRef version(String version) {
    this.version = version;
    return this;
  }

   /**
   * Version of the service Specification Not used in Beijing release
   * @return version
  **/
  @Schema(description = "Version of the service Specification Not used in Beijing release")
  public String getVersion() {
    return version;
  }

  public void setVersion(String version) {
    this.version = version;
  }

  public ServiceSpecificationRef targetServiceSchema(TargetServiceSchema targetServiceSchema) {
    this.targetServiceSchema = targetServiceSchema;
    return this;
  }

   /**
   * Get targetServiceSchema
   * @return targetServiceSchema
  **/
  @Schema(description = "")
  public TargetServiceSchema getTargetServiceSchema() {
    return targetServiceSchema;
  }

  public void setTargetServiceSchema(TargetServiceSchema targetServiceSchema) {
    this.targetServiceSchema = targetServiceSchema;
  }

  public ServiceSpecificationRef _atType(String _atType) {
    this._atType = _atType;
    return this;
  }

   /**
   * Not used in Beijing release
   * @return _atType
  **/
  @Schema(description = "Not used in Beijing release")
  public String getAtType() {
    return _atType;
  }

  public void setAtType(String _atType) {
    this._atType = _atType;
  }

  public ServiceSpecificationRef _atSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
    return this;
  }

   /**
   * Not used in Beijing release
   * @return _atSchemaLocation
  **/
  @Schema(description = "Not used in Beijing release")
  public String getAtSchemaLocation() {
    return _atSchemaLocation;
  }

  public void setAtSchemaLocation(String _atSchemaLocation) {
    this._atSchemaLocation = _atSchemaLocation;
  }

  public ServiceSpecificationRef _atBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
    return this;
  }

   /**
   * Not used in Beijing release
   * @return _atBaseType
  **/
  @Schema(description = "Not used in Beijing release")
  public String getAtBaseType() {
    return _atBaseType;
  }

  public void setAtBaseType(String _atBaseType) {
    this._atBaseType = _atBaseType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceSpecificationRef serviceSpecificationRef = (ServiceSpecificationRef) o;
    return Objects.equals(this.id, serviceSpecificationRef.id) &&
        Objects.equals(this.href, serviceSpecificationRef.href) &&
        Objects.equals(this.name, serviceSpecificationRef.name) &&
        Objects.equals(this.version, serviceSpecificationRef.version) &&
        Objects.equals(this.targetServiceSchema, serviceSpecificationRef.targetServiceSchema) &&
        Objects.equals(this._atType, serviceSpecificationRef._atType) &&
        Objects.equals(this._atSchemaLocation, serviceSpecificationRef._atSchemaLocation) &&
        Objects.equals(this._atBaseType, serviceSpecificationRef._atBaseType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, href, name, version, targetServiceSchema, _atType, _atSchemaLocation, _atBaseType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceSpecificationRef {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    href: ").append(toIndentedString(href)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("    targetServiceSchema: ").append(toIndentedString(targetServiceSchema)).append("\n");
    sb.append("    _atType: ").append(toIndentedString(_atType)).append("\n");
    sb.append("    _atSchemaLocation: ").append(toIndentedString(_atSchemaLocation)).append("\n");
    sb.append("    _atBaseType: ").append(toIndentedString(_atBaseType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
