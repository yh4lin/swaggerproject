/*
 * API ServiceOrder
 * Request the instantiation of a service  A Service Order is a type of order which can be used to describe a group of operations on service â€“ one service order item per service. An action at the level of the service order item describe the operation to be done on a service (add, terminate for example). The service order is triggered from the BSS system in charge of the product order management to ONAP that will manage the service fulfillment.  List of available subscription for serviceOrdering notifications, see /hub resources for more information:  - ServiceOrderCreationNotification - ServiceOrderStateChangeNotification - ServiceOrderItemStateChangeNotification  
 *
 * OpenAPI spec version: 4.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.SeverityMessage;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * An optional array of messages associated with the Order
 */
@Schema(description = "An optional array of messages associated with the Order")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-22T18:40:19.698152-04:00[America/Toronto]")
public class OrderMessage {
  @SerializedName("code")
  private String code = null;

  @SerializedName("field")
  private String field = null;

  @SerializedName("messageInformation")
  private String messageInformation = null;

  @SerializedName("severity")
  private SeverityMessage severity = null;

  @SerializedName("correctionRequired")
  private Boolean correctionRequired = null;

  public OrderMessage code(String code) {
    this.code = code;
    return this;
  }

   /**
   * A code associated to this message
   * @return code
  **/
  @Schema(description = "A code associated to this message")
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }

  public OrderMessage field(String field) {
    this.field = field;
    return this;
  }

   /**
   * Service Order attribute related to this error message
   * @return field
  **/
  @Schema(description = "Service Order attribute related to this error message")
  public String getField() {
    return field;
  }

  public void setField(String field) {
    this.field = field;
  }

  public OrderMessage messageInformation(String messageInformation) {
    this.messageInformation = messageInformation;
    return this;
  }

   /**
   * Message related to this order
   * @return messageInformation
  **/
  @Schema(description = "Message related to this order")
  public String getMessageInformation() {
    return messageInformation;
  }

  public void setMessageInformation(String messageInformation) {
    this.messageInformation = messageInformation;
  }

  public OrderMessage severity(SeverityMessage severity) {
    this.severity = severity;
    return this;
  }

   /**
   * Get severity
   * @return severity
  **/
  @Schema(required = true, description = "")
  public SeverityMessage getSeverity() {
    return severity;
  }

  public void setSeverity(SeverityMessage severity) {
    this.severity = severity;
  }

  public OrderMessage correctionRequired(Boolean correctionRequired) {
    this.correctionRequired = correctionRequired;
    return this;
  }

   /**
   * Indicator that an action is required to allow service order fullfilment to follow up
   * @return correctionRequired
  **/
  @Schema(required = true, description = "Indicator that an action is required to allow service order fullfilment to follow up")
  public Boolean isCorrectionRequired() {
    return correctionRequired;
  }

  public void setCorrectionRequired(Boolean correctionRequired) {
    this.correctionRequired = correctionRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderMessage orderMessage = (OrderMessage) o;
    return Objects.equals(this.code, orderMessage.code) &&
        Objects.equals(this.field, orderMessage.field) &&
        Objects.equals(this.messageInformation, orderMessage.messageInformation) &&
        Objects.equals(this.severity, orderMessage.severity) &&
        Objects.equals(this.correctionRequired, orderMessage.correctionRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, field, messageInformation, severity, correctionRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderMessage {\n");
    
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    field: ").append(toIndentedString(field)).append("\n");
    sb.append("    messageInformation: ").append(toIndentedString(messageInformation)).append("\n");
    sb.append("    severity: ").append(toIndentedString(severity)).append("\n");
    sb.append("    correctionRequired: ").append(toIndentedString(correctionRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
