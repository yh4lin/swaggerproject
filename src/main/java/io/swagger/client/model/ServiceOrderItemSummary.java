/*
 * API ServiceOrder
 * Request the instantiation of a service  A Service Order is a type of order which can be used to describe a group of operations on service – one service order item per service. An action at the level of the service order item describe the operation to be done on a service (add, terminate for example). The service order is triggered from the BSS system in charge of the product order management to ONAP that will manage the service fulfillment.  List of available subscription for serviceOrdering notifications, see /hub resources for more information:  - ServiceOrderCreationNotification - ServiceOrderStateChangeNotification - ServiceOrderItemStateChangeNotification  
 *
 * OpenAPI spec version: 4.0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.client.model.ActionType;
import io.swagger.client.model.Service;
import io.swagger.client.model.StateType;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * Service Order item summary to be used for notification
 */
@Schema(description = "Service Order item summary to be used for notification")
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.JavaClientCodegen", date = "2020-09-22T18:40:19.698152-04:00[America/Toronto]")
public class ServiceOrderItemSummary {
  @SerializedName("id")
  private String id = null;

  @SerializedName("action")
  private ActionType action = null;

  @SerializedName("state")
  private StateType state = null;

  @SerializedName("service")
  private Service service = null;

  public ServiceOrderItemSummary id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Identifier of the line item (generally it is a sequence number 01, 02, 03, …)
   * @return id
  **/
  @Schema(required = true, description = "Identifier of the line item (generally it is a sequence number 01, 02, 03, …)")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public ServiceOrderItemSummary action(ActionType action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @Schema(description = "")
  public ActionType getAction() {
    return action;
  }

  public void setAction(ActionType action) {
    this.action = action;
  }

  public ServiceOrderItemSummary state(StateType state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @Schema(description = "")
  public StateType getState() {
    return state;
  }

  public void setState(StateType state) {
    this.state = state;
  }

  public ServiceOrderItemSummary service(Service service) {
    this.service = service;
    return this;
  }

   /**
   * Get service
   * @return service
  **/
  @Schema(required = true, description = "")
  public Service getService() {
    return service;
  }

  public void setService(Service service) {
    this.service = service;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ServiceOrderItemSummary serviceOrderItemSummary = (ServiceOrderItemSummary) o;
    return Objects.equals(this.id, serviceOrderItemSummary.id) &&
        Objects.equals(this.action, serviceOrderItemSummary.action) &&
        Objects.equals(this.state, serviceOrderItemSummary.state) &&
        Objects.equals(this.service, serviceOrderItemSummary.service);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, action, state, service);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ServiceOrderItemSummary {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    service: ").append(toIndentedString(service)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
